<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ssms.dao.UserMessageMapper" >
    <resultMap id="BaseResultMap" type="cn.ssms.model.UserMessage" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="form_id" property="formId" jdbcType="INTEGER" />
        <result column="to_id" property="toId" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="VARCHAR" />
        <result column="read_time" property="readTime" jdbcType="VARCHAR" />
        <result column="content" property="content" jdbcType="LONGVARCHAR" />
        <result column="type" property="type" jdbcType="INTEGER" />
        <result column="from_people" property="fromPeople" jdbcType="VARCHAR" />
        <result column="to_people" property="toPeople" jdbcType="VARCHAR" />
        <result column="from_code" property="fromCode" jdbcType="VARCHAR" />
        <result column="to_code" property="toCode" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List" >
        id, form_id, to_id, create_time, read_time, content, type
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from t_user_message
        where id = #{id,jdbcType=INTEGER}
    </select>

    <insert id="insert" parameterType="cn.ssms.model.UserMessage" >
        insert into t_user_message (id, form_id, to_id, 
            create_time, read_time, content, 
            type)
        values (#{id,jdbcType=INTEGER}, #{formId,jdbcType=INTEGER}, #{toId,jdbcType=INTEGER}, 
            #{createTime,jdbcType=TIMESTAMP}, #{readTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}, 
            #{type,jdbcType=INTEGER})
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="cn.ssms.model.UserMessage" >
        update t_user_message
        <set >
            <if test="formId != null" >
                form_id = #{formId,jdbcType=INTEGER},
            </if>
            <if test="toId != null" >
                to_id = #{toId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="readTime != null" >
                read_time = #{readTime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null" >
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="type != null" >
                type = #{type,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from t_user_message
        where id = #{id,jdbcType=INTEGER}
    </delete>
    
    <select id="getAllMessageByParams" resultMap="BaseResultMap" parameterType="HashMap">
    	SELECT a.type,a.id,b.`name` as from_people,b.user_code as from_code,c.`name` as to_people,
    	c.user_code as to_code,DATE_FORMAT(a.create_time,'%Y-%m-%d %H:%i:%s') create_time,
    	a.content
		FROM t_user_message a
		LEFT JOIN t_user b ON a.form_id = b.id
		LEFT JOIN t_user c ON a.to_id = c.id
		<where>
			<if test="from != null and from != ''">
				b.`name` = #{from,jdbcType=VARCHAR}
			</if>
			<if test="to != null and to != ''">
				and c.`name` = #{to,jdbcType=VARCHAR}
			</if>
			<if test="type != null">
				and a.type = #{type,jdbcType=INTEGER}
			</if>
			<if test="content != null and content !=''">
				and a.content like '%${content}%'
			</if>
			<if test="isPrivate != null and isPrivate !=''">
				and c.user_type != 3 and b.user_type != 3
			</if>
			<if test="isPublic != null and isPublic !=''">
				and (c.user_type = 3 or b.user_type = 3)
			</if>
		</where>
		<if test="beginNum != null and limitNum != null">
    		limit #{beginNum,jdbcType=INTEGER},#{limitNum,jdbcType=INTEGER}
    	</if>
    </select>
    <select id="countByParams" resultType="java.lang.Integer" parameterType="HashMap" >
    	SELECT count(0)
		FROM t_user_message a
		LEFT JOIN t_user b ON a.form_id = b.id
		LEFT JOIN t_user c ON a.to_id = c.id
		<where>
			<if test="from != null and from != ''">
				b.`name` = #{from,jdbcType=VARCHAR}
			</if>
			<if test="to != null and to != ''">
				and c.`name` = #{to,jdbcType=VARCHAR}
			</if>
			<if test="type != null">
				and a.type = #{type,jdbcType=INTEGER}
			</if>
			<if test="content != null and content !=''">
				and a.content like '%${content}%'
			</if>
			<if test="isPrivate != null and isPrivate !=''">
				and c.user_type != 3 and b.user_type != 3
			</if>
			<if test="isPublic != null and isPublic !=''">
				and (c.user_type = 3 or b.user_type = 3)
			</if>
		</where>
    </select>
</mapper>